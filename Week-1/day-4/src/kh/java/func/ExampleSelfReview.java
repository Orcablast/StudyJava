package kh.java.func;

public class ExampleSelfReview {
	public void exam01() { // Q3-1.
		// 변수 i의 값을 1로 선언, i가 5와 작거나 같을때까지, for 문내의 명령어를 1회 실행후 i를 1씩 증가 -> i의 값은 1~5까지 순차적으로 증가
		for(int i = 1; i<=5; i++) { 
			System.out.print("*"); //
		}
	}
	
	public void exam02() { // Q3-2.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지, for문 내의 명령어를 한번 실행 후 i의 값을 1 증가 -> i의 값은 1~5까지, 총 5회 반복
		for(int i=1; i<=5; i++) {
			System.out.print("*"); // 문자열 *를 출력
			System.out.println(); // 1행 출력
		}
	}
	
	public void exam03() { // Q3-3.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지, for문내의 명령어를 1회 실행후 i의 값을 1 증가 -> i의 값은 1~5까지, 총 5회 반복
		for(int i=1; i<=5; i++) {
			//  변수 h의 값을 1로 선언, h가 5보다 작거나 같을때까지, for문 내의 명령어를 1회 실행 후 h의 값을 1증가 -> h의 값은 1~5까지, 총 5회 반복
			// 결과적으로 i값이 1번 증가할때 h의 값은 5번 증가함 -> i가 1회 반복할때 h는 5회 반복 -> h는 총 25번 실행
			for(int h=1; h<=5; h++) {
				System.out.print("*");
			}
			System.out.println();			
		}
	}
	
	public void exam04() { // Q3-4.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지, for문 내의 명령어를 1회 실행 후 i의 값을 1 증가 -> i의 값은 1~5까지 총 5회 반복
		for(int i=1; i<=5; i++) {
			// 변수 h의 값을 1로 선언, h가 5보다 작거나 같을때까지, for문 내의 명령어를 1회 실행 후 h의 값을 1 증가 -> h의 값은 1~5까지 총 5회 반복
			// 결과적으로 i가 1회 반복할때 h는 5회 반복 -> h는 총 25번 실행
			for(int h=1; h<=5; h++) {
				// 변수 i의 값을 출력
				System.out.print(i);
			}
			// h for문의 반복이 끝나면 1줄 진행
			System.out.println();
			// 변수 i의 값은 5회 출력때마다 1씩 증가하므로
			// 최초 i의 값을 5회 출력 후 1줄 진행, 두번째 i의 값을 5회 출력 후 1줄 진행, ... 5번째 i의 값을 5회 출력 후 1줄 진행 
		}
	}
	
	public void exam05() { // Q3-5.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지, for문 내의 명령어를 실행 후 i의 값을 1 증가
		// i의 값은 1~5까지 총 5회 반복
		for(int i=1; i<=5; i++) {
			// 변수 h의 값을 1로 선언, h가 5보다 작거나 같을때까지, for문 내의 명령어를 실행 후 h의 값을 1증가
			// h의 값은 1~5까지 총 5회 반복
			for(int h=1; h<=5; h++) {
				// 변수 h의 값을 출력				
				System.out.print(h);
			}
			// h변수 for문의 반복이 종료되면 1줄 진행
			System.out.println();
			
			// 결과적으로 h변수 for문의 반복은 총 25회 진행되고, 매 5회마다 1줄 진행한다.
			// 변수 h를 출력 한 후 h의 값을 1 증가시키므로 매 출력시마다 h의 값은 변화한다.
			// h의 값을 1~5까지 5회 출력 후 다시 변수 i for문을 5회 반복하므로 
			// 한줄에 12345를 출력하는 명령이 5회 반복된다
		}
	}
	
	public void exam06() { // Q3-6. 
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지, for문 내의 명령어를 실행 후 i를 1 증가
		// 총 5회 반복
		for(int i=1; i<=5; i++) {
			// h의 값을 0으로 선언, h가 4보다 작거나 같을때까지, for문 명령어를 실행후 h를 1증가
			// 0~4까지 총 5회 반복
			for(int h=0; h<=4; h++) {
				// 변수 i 와 변수 h의 합을 출력.				
				System.out.print(i+h);
			}
			// 변수 h for문의 반복이 종료되면 1줄 진행
			System.out.println();
		}
		
		// 명령어가 실행되는 변수 h for문은 총 25회 실행, 5회의 반복 출력이 종료되면 1줄을 진행한다.
		// 변수 i의 값이 1일때 변수 h의 값은 0~4까지 반복, 변수 i의 값이 2일때 변수 h의 값은 0~4까지 반복, ...
		// 첫번째 반복에서는 i의 값 1과 변수 h의 값 0을 합하여 출력 후 h의 값을 1 증가 
		// 다시 i의 값 1과 증가된 h의 값 1을 합한 값을 출력 후 h의 값을 1 증가 ... (반복)
		// 두번째 반복에서 i의 값 2와 변수 h의 값 0을 합하여 출력 후 h의 값을 1증가 ... (반복)
		// 변수 h의 반복이 끝나면 1행을 진행하기 때문에
		// 결과적으로 각 행마다 i의 값은 고정되며 h의 값이 증가하며 합한 값을 출력한다.
	}
	
	public void exam07() { //Q3-7.
		// 변수 i의 값을 5로 선언, i가 0보다 클때까지, i의 값을 1씩 감소
		// 반복되는 i의 값은 5~1로 총 5회 반복
		for(int i=5; i>0; i--) {
			// 변수 h의 값을 0으로 선언, h가 5보다 작을때까지, h의 값을 1씩 증가
			// 반복되는 h의 값은 0~4로 총 5회 반복
			for(int h=0; h<5; h++) {
				// 변수 i와 변수 h의 값을 출력한다
				// 변수 h의 반복이 종료될때까지 변수 i의 값은 변하지 않음
				System.out.print(i+h);
			}
			// 변수 h for문의 반복이 끝나면 1행 진행
			System.out.println();
		}
		
		// Q3-6에서와 같이 변수 i와 변수 h를 합한 값을 출력하되
		// 각 행(i의 반복)마다 i의 값은 고정되있지만 h의 값은 증가하도록 설정
		// 각 행에서 i의 값은 5~1까지 1씩 감소하지만, 같은 행 내(h의 반복)에서 h의 값은 1씩 증가하며
		// 결과적으로 한 줄을 출력할때 고정된 i의 값과 증가하는 h의 값의 연산값이 출력된다.
	}
	
	public void exam08() { // Q3-8.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지, 명령어 실행 후 i의 값을 1씩 증가
		// 변수 i의 값은 1~5까지 총 5회 반복
		for(int i=1; i<=5; i++) {
			// 변수 h의 값을 i로 선언, h가 0보다 클때까지, 명령어 실행 후 h의 값을 1씩 감소
			// 변수 h의 초기값은 i와 같으므로 
			// 변수 i의 반복마다 h의 초기값은 매번 변화한다
			// 결과적으로 i의 값 만큼 h가 반복
			for(int h=i; h>0; h--) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	
	public void exam09() { // Q3-9. 
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지 for내의 명령문을 실행하고 i의 값을 1 증가
		// i의 값은 1~5까지 총 5회 반복
		for(int i=1; i<=5; i++) {
			// 변수 h의 값을 i로 선언, h의 값이 5보다 작거나 같을때까지  for문 내의 명령문을 실행 후 h의 값을 1 증가
			// h의 초기값은 i값이기 때문에 h의 반복이 종료된 후 입력되는 i 값에 따라 h의 초기값이 바뀐다
			for(int h=i; h<=5; h++) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	
	public void exam10() { // Q3-10.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지 for문 내의 명령어를 실행하고 i값을 1 증가
		// i의 값은 1~5까지 총 5회 반복
		for(int i=1; i<=5; i++) {
			// 변수 k의 값을 i로 선언, k의 값이 1보다 클때까지 for문 내의 명령어를 실행하고 k값을 1 감소
			// k의 초기값은 입력받은 i값에 따라 변화한다
			// 결과적으로 i값이 명령어를 수행하는 횟수가 된다
			for(int k=(i-1); k>0 ; k--) {
				System.out.print(" ");
			}
			// 혹은 아래와 같이 조건문의 연산식을 간소화 할 수 있다
			// for(int k=i); k>1 ; k--)
			//
			// 변수 h의 값을 i로 선언, h의 값이 5보다 작거나 같을때까지 for문 내의 명령어를 실행하고 h값을 1 증가
			// h의 초기값은 입력받은 i값에 따라 변화한다
			// 결과적으로 i값이 명령어를 수행하는 횟수가 된다
			for(int h=i; h<=5; h++) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	
	public void exam11() { // Q3-11. 
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지 for문 내의 명령어를 실행 후 i값을 1 증가
		// i값은 1~5까지 총 5회 반복
		for(int i=1; i<=5; i++) {
			// 변수 j의 값을 i로 선언, j가 4보다 작거나 같을때까지 for문 내의 명령어를 실행 후 j의 값을 1 증가
			// 입력받은 i값에 따라 j의 초기값이 변화
			// i값이 증가함에 따라 초기값이 증가하므로 
			// 결과적으로 j값을 증가시켜 4에 도달하기까지의 횟수가 감소
			for(int j=i; j<=4; j++) {
				System.out.print(" ");
			}
			// 변수 k의 값을 i로 선언, k가 0보다 클때까지 for문 내의 명령어를 실행 후 k의 값을 1 감소
			// 입력받은 i값에 따라 k의 초기값이 변화
			// i값이 증가함에 따라 k의 초기값이 증가하므로
			// 결과적으로 i값이 명령문을 실행할 반복횟수와 동일
			for(int k=i; k>0; k--) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	
	public void exam12() { // Q3-12.
		// 변수 i의 값을 1로 선언, i값이 5보다 작거나 같을때까지 for 명령문을 실행 후 i값을 1 증가
		// i의값은 1~5로 총 5회 반복
		for(int i=1; i<=5; i++) {
			// i의 값이 5가 아닐때 if문 실행 (i=1~4)
			if(i!=5) {
				// 변수 j의 값을 i로 선언, j값이 0보다 클때까지 for 명령문을 실행 후 j값을 1 감소
				// 입력받은 i값에 따라 j의 초기값이 변화
				// i값에 따라 j의 초기값이 증가하므로
				// 결과적으로 입력받은 i값이 j의 반복횟수가 된다
				for(int j=i; j>0; j--) {
					System.out.print("*");
				}
				System.out.println();
			} else if(i==5) { // else로 취급해도 결과는 같음
				// h의 초기값을 i로 선언, h값이 0보다 클때까지 for 명령문을 실행 후 h값을 1 감소
				// 이 경우 입력받는 i값은 5 한번으로 고정되기때문에 (다른 i 값은 상위 if문에서 처리)
				// h값은 5~1까지 총 5회 반복
				for(int h=i; h>0; h--) {
					// 변수 l의 값을 h로 선언, l값이 0보다 클때까지 for 명령문을 실행 후 l값을 1 감소
					// 입력받는 h의 값에 따라 l의 초기값이 변화
					// 결과적으로 l값을 감소시켜 0에 도달하는 횟수가 감소하기때문에
					// 입력받은 h값이 곧 명령문을 실행하는 횟수가 된다 
					for(int l=h; l>0; l--) {
						System.out.print("*");
					}
					System.out.println();
					// for문의 반복이 끝나면 1줄 진행
				}
			}
		}
	}
	
	public void exam13() { // Q3-13.
		// 변수 i의 값을 1로 선언, i가 5보다 작거나 같을때까지 for문을 실행하고 i값을 1씩 증가
		// i의 값은 1~5로 총 5회 반복
		for(int i=1; i<=5; i++) {
			// i의 값이 5가 아닐때 (i=1~4) if문을 실행
			if(i!=5) {
				// 변수 j의 값을 i로 선언, j가 5보다 작거나 같을때까지 for문을 실행하고 j값을 1씩 증가
				// 입력받은 i값에 따라 j의 초기값이 변화
				// 입력받는 i값이 증가하면 j값을 반복증가시켜 5에 도달하는 횟수가 감소한다
				// i값은 1~4로 증가하며 for문의 반복횟수는 5~2로 감소한다
				for(int j=i; j<=5; j++ ) {
					System.out.print("*");
				}
				System.out.println();
			} else if(i==5) { // else로 처리해도 무방
				// 변수 h의 값을 i로 선언, h가 0보다 클때까지 for문을 실행하고 h값을 1씩 감소
				// 입력받는 i값은 5 한번으로 고정
				// h의 값은 5에서 1로 감소하며 총 5회 반복 
				for(int h=i; h>0; h--) {
					// 변수 k의 값을 h로 선언, h가 5보다 작거나 같을때까지 for문을 실행하고 k값을 1씩 증가
					// 입력받는 h값에 따라 k의 초기값이 변화
					// 입력받는 h값이 감소함에 따라 k값을 증가시켜 5에 도달하기까지의 횟수가 증가
					for(int k=h; k<=5; k++) {
						System.out.print("*");
					}
					// for문의 반복이 끝나면 한줄 진행
					System.out.println();
				}
			}
		}
	}
}
